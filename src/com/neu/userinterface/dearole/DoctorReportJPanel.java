/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neu.userinterface.dearole;

import com.neu.business.network.Network;
import com.neu.business.patient.Patient;
import com.neu.business.patient.PatientDirectory;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Anmol
 */
public class DoctorReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorReportJPanel
     */
 

    private JPanel userProcessContainer;
    private PatientDirectory patientDirectory;
    
    DoctorReportJPanel(JPanel userProcessContainer, PatientDirectory patientDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patientDirectory = patientDirectory;
        
        populateFraudDocTable();
        populatePopularChemistTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocFraud = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPopularChemist = new javax.swing.JTable();
        backJButton2 = new javax.swing.JButton();
        btnDoctorFraud = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jChartJPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDocFraud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor name", "Fraud meter"
            }
        ));
        jScrollPane1.setViewportView(tblDocFraud);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 115, -1, 166));

        tblPopularChemist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chemist Name", "Prescription Count"
            }
        ));
        jScrollPane2.setViewportView(tblPopularChemist);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 115, -1, 166));

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });
        add(backJButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 723, -1, -1));

        btnDoctorFraud.setText("Show Doctor Fraud Chart");
        btnDoctorFraud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorFraudActionPerformed(evt);
            }
        });
        add(btnDoctorFraud, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 299, -1, -1));

        jButton2.setText("Show Popular Chemist Chart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 299, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Doctor prescribing with risk score 'High'");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 82, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Chemist selling the most Opioids");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 82, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Reports");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 16, -1, -1));

        jChartJPanel.setBackground(new java.awt.Color(247, 247, 247));
        jChartJPanel.setLayout(new java.awt.BorderLayout());
        add(jChartJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 359, 1033, 346));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void btnDoctorFraudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorFraudActionPerformed
        // TODO add your handling code here:
        
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        JFreeChart barChart = ChartFactory.createBarChart("Doctors", "", "Bad Prescriptions", barChartData, PlotOrientation.VERTICAL, true, true, true);
        
        HashMap<String, Integer> doctorFraud = patientDirectory.fraudDoctorReport();

            for (Map.Entry<String, Integer> entry : doctorFraud.entrySet()) {
                String doctor = entry.getKey();
                Integer fraud = entry.getValue();

                barChartData.setValue(fraud, "Doctors", doctor);
            }
        
        
        CategoryPlot barchrt = barChart.getCategoryPlot();

        barchrt.setRangeGridlinePaint(Color.ORANGE);

        ChartPanel barP = new ChartPanel(barChart);

        barP.setVisible(true);

        jChartJPanel.removeAll();

        jChartJPanel.add(barP, BorderLayout.CENTER);

        jChartJPanel.validate();
        
    }//GEN-LAST:event_btnDoctorFraudActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        JFreeChart barChart = ChartFactory.createBarChart("Chemist", "", "Total Prescriptions", barChartData, PlotOrientation.VERTICAL, true, true, true);
        
        HashMap<String, Integer> popularChemists = patientDirectory.popularChemist();
                
            for (Map.Entry<String, Integer> entry : popularChemists.entrySet()) {
                String chemist = entry.getKey();
                Integer prescription = entry.getValue();

                barChartData.setValue(prescription, "Chemists", chemist);
            }
            
            CategoryPlot barchrt = barChart.getCategoryPlot();

        barchrt.setRangeGridlinePaint(Color.ORANGE);

        ChartPanel barP = new ChartPanel(barChart);

        barP.setVisible(true);

        jChartJPanel.removeAll();

        jChartJPanel.add(barP, BorderLayout.CENTER);

        jChartJPanel.validate();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    void populateFraudDocTable(){
    
         DefaultTableModel dtm = (DefaultTableModel)tblDocFraud.getModel();
        dtm.setRowCount(0);
        
        HashMap<String, Integer> fraudDoc = patientDirectory.fraudDoctorReport();
        
        for(Map.Entry<String, Integer> entry: fraudDoc.entrySet())
        {
            String key = entry.getKey();
            Integer value = entry.getValue();
            
            Object[] row = new Object[2];
            row[0] = key;
            row[1] = value;
            dtm.addRow(row);
        }
    }
    
    
    
    public void populatePopularChemistTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)tblPopularChemist.getModel();
        dtm.setRowCount(0);
        
        HashMap<String, Integer> popularChemists = patientDirectory.popularChemist();
        
        for(Map.Entry<String, Integer> entry : popularChemists.entrySet())
        {
            String key = entry.getKey();
            Integer value = entry.getValue();
            
            Object[] row = new Object[2];
            row[0] = key;
            row[1] = value;
            dtm.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JButton btnDoctorFraud;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jChartJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDocFraud;
    private javax.swing.JTable tblPopularChemist;
    // End of variables declaration//GEN-END:variables
}
